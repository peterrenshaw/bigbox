

        __     _         __                
       / /_   (_)____ _ / /_   ____   _  __
      / __ \ / // __ `// __ \ / __ \ | |/_/
     / /_/ // // /_/ // /_/ // /_/ /_>  <
    /_.___//_/ \__, //_.___/ \____//_/|_| [1]
              /____/                       


  name TODO
  date 2013AUG22
  prog @peterrenshaw
  desc BIGBOX: A easy to use front end for socsim.


2013SEP06
* integration
- build demo app with server + search
* testing
[-] server
[-] license to tools code
[-] test parameters against spec
[-] duckduckgo.Duckduckgo.parameter 
[-] default: just select -d & most settings are selected, instead
    of having to re-do confusing options
[-] more testing
[x] explain why not using python-duckduckgo?
[+] where are you *storing* the data?
[+] how are you *recalling* the data?
* bb server
[-] planning for server
* tables
* workflow
* getting api server & static server to work
* parser

2013SEP05
[x] db research
[x] front-end time
[x] server work
[x] questions on workflow

2013SEP04
[X] build prototype REST api server in python
 -  bottle, flask
 -  hack at tornado
[X] story of bigbox & server
 -  3 little pigs
[+] twitter
[X] bottle vs tornado


2013SEP01
* bigbox
[x] explain why not using python-duckduckgo?
[x] created duckduckgo.Result
[x] created duckduckgo.ResultAbstract
[x] significant upgrade to query
[x] write up

  big one, learned a lot during this hack sessionÂ¬

* duckduckgo.Result
- when we query the ddg instant answer api we get back a json file.
  so we need a way to query it. The Result object does this.
- it grabs the input data (pythonic) and for each item does a simple
  search.
- the bulk of the search is powered by 5 lines of code
- the stubs simply return the found data by name
- there are 2 methods that are complex requiring more processing.
 
* duckduckgo.ResultAbstract
- for duckduckgo.Result().related_topics() and 
  duckduckgo.Result().results() we get back multiple results as a 
  list
- this requires a further breakdown.
- so ResultAbstract breaks down both these lists of data extracting
  the data
- again finding the data is 5 lines of code.
- We inject this object into duckduckgo.Result where we want to 
  process the list of data.
 
* query
- now caches data with -k so you can query locally or live
- demonstrates how to use lists with ResultAbstract
- demonstrates how to use ResultAbstract injection into Results object


2013AUG31
* bigbox
[x] fix querystring order problem
[x] add "&t=nameofapp" to parameter list

* bb server
[x] bottle installed on python2/3 

* 2013AUG30
[x] work on tools/duckduckgo.py
[x] docs
[x] data & examples
[x] fix bug
[x] more work on options
[x] work out defaults & optional inputs

* 2013AUG23
- specs
- work on docs/hack/hack-bigbox-search-ui-io.md

* 2013AUG22
- read docs/hack/hack-bigbox-search.txt

* 2013AUG21
- endpoints

* 2013AUG19
- added simple angular FE sample code

Resources

[1] Title created with an ASCII text generator using 'slant' and 'stretch=Yes". 
The code is based on Figlet which can be found here ~ <http://www.figlet.org/>
[Last accessed: Sunday 4th August, 2013]
<http://www.network-science.de/ascii/>


# vim: ff=unix:ts=4:sw=4:tw=78:noai:expandtab
